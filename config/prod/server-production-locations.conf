
#common to all locations
expires off;
#sets the Expires header to 31 December 2037 23:59:59 GMT,
#and the Cache-Control max-age to 10 years.
add_header Pragma public;
#add_header Cache-Control "public, must-revalidate, proxy-revalidate";

location ~* ^(.*)\.html$ {
  gzip_static  off;
  try_files $uri @proxy;
  }

##########################
# IMAGES
# look for images on disk first, reverse proxied thru eXist if not found
# images don't have to have an extension ref. try files
# don't bother to gzip or look for gzip file
# make browser cache images with expires set to max  into the future
# SVG images are the exception as we want to gzip these and
# cache to fs them once received from eXist
# #######################

location ~* ^(/resources/images/svg.+)$ {
  include       proxy_cache.conf;
  gzip_static  on;
  try_files  $uri $uri.svg.gz $uri.svg  @proxy;
  log_not_found off;
}

location ~* ^(/resources/images.+)$ {
  gzip_static  off;
  #add_header Expires "Thu, 31 Dec 2037 23:55:55 GMT";
  #add_header Cache-Control "public, max-age=315360000";
  try_files $uri $uri.jpg $uri.jpeg $uri.gif $uri.png $uri.ico  @proxy;
  log_not_found off;
}

##########################
# STYLES AND SCRIPTS
# look for gzipped css on disk first [ filename.css.gz ]
# look for css on disk next [ filename.css ]
# css don't have to have an extension ref. try files
# make browser cache images with expires set to max  into the future
# #######################

location ~* ^(/resources/styles.+)$ {
  gzip_static on;
  add_header Pragma public;
  #add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  try_files $uri $uri.css.gz $uri.css  @proxy;
  }

location ~* ^(/resources/scripts)$ {
  gzip_static on;
  try_files $uri  $uri.js.gz  $uri $uri.js @proxy;
  }

##########################
# our production reverse proxy
# also includes a proxy cache
# #######################


location @proxy {
  include       proxy_cache.conf;
  rewrite ^/?(.*)$ /exist/apps/$domain/$1 break;
  proxy_pass http://localhost:8080;
  }

